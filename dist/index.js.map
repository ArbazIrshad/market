{"version":3,"sources":["main.js","index.js"],"names":["express","require","Client","qrImage","app","client","qrCodeData","on","qr","session","console","log","initialize","msg","error","catch","err","process","exit","use","json","get","req","res","qrImageBuffer","imageSync","type","writeHead","end","post","phoneNumbers","message","body","Array","isArray","Error","phoneNumber","chatId","sendMessage","status","send","PORT","env","module","exports","port","listen"],"mappings":";AAAA,MAAMA,EAAUC,QAAQ,YAClB,OAAEC,GAAWD,QAAQ,mBACrBE,EAAUF,QAAQ,YAElBG,EAAMJ,IACNK,EAAS,IAAIH,EAEnB,IAAII,EAEJD,EAAOE,GAAG,KAAMC,IACZF,EAAaE,IAGjBH,EAAOE,GAAG,gBAAiBE,IACvBC,QAAQC,IAAI,iBACZD,QAAQC,IAAI,YAAaF,KAG7BJ,EAAOE,GAAG,QAAS,KACfG,QAAQC,IAAI,sBAGhBN,EAAOE,GAAG,eAAgB,KACtBG,QAAQC,IAAI,+CACZN,EAAOO,eAGXP,EAAOE,GAAG,eAAgBM,IACtBH,QAAQI,MAAM,yBAA0BD,KAG5CR,EAAOO,aAAaG,MAAMC,IACtBN,QAAQI,MAAM,yBAA0BE,GACxCC,QAAQC,KAAK,KAGjBd,EAAIe,IAAInB,EAAQoB,QAEhBhB,EAAIiB,IAAI,IAAK,CAACC,EAAKC,KACf,MAAMC,EAAgBrB,EAAQsB,UAAUnB,EAAY,CAAEoB,KAAM,QAC5DH,EAAII,UAAU,IAAK,CAAE,eAAgB,cACrCJ,EAAIK,IAAIJ,KAGZpB,EAAIyB,KAAK,gBAAiB,MAAOP,EAAKC,KAClC,IACI,MAAM,aAAEO,EAAY,QAAEC,GAAYT,EAAIU,KACtC,IAAKF,IAAiBG,MAAMC,QAAQJ,KAAkBC,EAClD,MAAM,IAAII,MAAM,wBAEpB,IAAK,MAAMC,KAAeN,EAAc,CACpC,MAAMO,KAAYD,eACZ/B,EAAOiC,YAAYD,EAAQN,GACjCrB,QAAQC,oCAAoCyB,KAEhDb,EAAIgB,OAAO,KAAKC,KAAK,+BACvB,MAAO1B,GACLJ,QAAQI,MAAM,yBAA0BA,GACxCS,EAAIgB,OAAO,KAAKC,KAAK,4BAI7B,MAAMC,EAAOxB,QAAQyB,IAAID,MAAQ,IAIjCE,OAAOC,QAAUxC;;AClEjB,MAAMA,EAAMH,QAAQ,UAEd4C,EAAO,OAEbzC,EAAI0C,OAAOD,EAAM,KACfnC,QAAQC,IAAK","file":"index.js","sourceRoot":"../src","sourcesContent":["const express = require('express');\nconst { Client } = require('whatsapp-web.js');\nconst qrImage = require('qr-image');\n\nconst app = express();\nconst client = new Client();\n\nlet qrCodeData;\n\nclient.on('qr', qr => {\n    qrCodeData = qr;\n});\n\nclient.on('authenticated', session => {\n    console.log('Authenticated');\n    console.log('Session: ', session);\n});\n\nclient.on('ready', () => {\n    console.log('Client is ready!');\n});\n\nclient.on('disconnected', () => {\n    console.log('Client disconnected, trying to reconnect...');\n    client.initialize();\n});\n\nclient.on('auth_failure', msg => {\n    console.error('Authentication failed:', msg);\n});\n\nclient.initialize().catch(err => {\n    console.error('Initialization failed:', err);\n    process.exit(1);\n});\n\napp.use(express.json());\n\napp.get('/', (req, res) => {\n    const qrImageBuffer = qrImage.imageSync(qrCodeData, { type: 'png' });\n    res.writeHead(200, { 'Content-Type': 'image/png' });\n    res.end(qrImageBuffer);\n});\n\napp.post('/send-message', async (req, res) => {\n    try {\n        const { phoneNumbers, message } = req.body;\n        if (!phoneNumbers || !Array.isArray(phoneNumbers) || !message) {\n            throw new Error('Invalid request body');\n        }\n        for (const phoneNumber of phoneNumbers) {\n            const chatId = `${phoneNumber}@c.us`;\n            await client.sendMessage(chatId, message);\n            console.log(`Message sent successfully to ${phoneNumber}`);\n        }\n        res.status(200).send('Messages sent successfully!');\n    } catch (error) {\n        console.error('Error sending message:', error);\n        res.status(500).send('Error sending message');\n    }\n});\n\nconst PORT = process.env.PORT || 3000;\n// app.listen(PORT, () => {\n//     console.log(`Server is running on port ${PORT}`);\n// });\nmodule.exports = app;","const app = require('./main');\r\n\r\nconst port = '8888';\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is listening on port ${port}...`);\r\n});"]}