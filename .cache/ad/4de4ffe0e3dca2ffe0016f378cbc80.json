{"id":"../node_modules/node-webpmux/webp.js","dependencies":[{"name":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/package.json","includedInParent":true,"mtime":1709226561854},{"name":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/node-webpmux/package.json","includedInParent":true,"mtime":1709226417615},{"name":"./parser.js","loc":{"line":18,"column":43,"index":785},"parent":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/node-webpmux/webp.js","resolved":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/node-webpmux/parser.js"},{"name":"./io.js","loc":{"line":19,"column":19,"index":820},"parent":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/node-webpmux/webp.js","resolved":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/node-webpmux/io.js"},{"name":"./libwebp.js","loc":{"line":380,"column":30,"index":20623},"parent":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/node-webpmux/webp.js","resolved":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/node-webpmux/libwebp.js"},{"name":"buffer","parent":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/node-webpmux/webp.js","resolved":"/Users/muhammadfarooqiqbal/flutterprojects/desiresol/nodejswork/marketingproject/marketing/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*\n    node-webpmux - NodeJS module for interacting with WebP images\n    Copyright (C) 2023  ApeironTsuka\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n*/\n\n\n// For more information on the WebP format, see https://developers.google.com/speed/webp/docs/riff_container\nconst { WebPReader, WebPWriter } = require('./parser.js');\nconst IO = require('./io.js');\nconst emptyImageBuffer = Buffer.from([\n  0x52, 0x49, 0x46, 0x46,   0x24, 0x00, 0x00, 0x00,   0x57, 0x45, 0x42, 0x50,   0x56, 0x50, 0x38, 0x20,\n  0x18, 0x00, 0x00, 0x00,   0x30, 0x01, 0x00, 0x9d,   0x01, 0x2a, 0x01, 0x00,   0x01, 0x00, 0x02, 0x00,\n  0x34, 0x25, 0xa4, 0x00,   0x03, 0x70, 0x00, 0xfe,   0xfb, 0xfd, 0x50, 0x00\n]);\nconst constants = {\n  TYPE_LOSSY: 0,\n  TYPE_LOSSLESS: 1,\n  TYPE_EXTENDED: 2\n};\nconst encodeResults = {\n  // These are errors from binding.cpp\n  LIB_NOT_READY: -1,                         // <interface>.initEnc() was not called. This happens internally during <interface>.encodeImage() and thus should never happen.\n  LIB_INVALID_CONFIG: -2,                    // invalid options passed in via set[Image/Frame]Data. This should never happen.\n  SUCCESS: 0,\n  // These errors are from native code and can be found in upstream libwebp/src/encode.h, WebPEncodingError enum\n  VP8_ENC_ERROR_OUT_OF_MEMORY: 1,            // memory error allocating objects\n  VP8_ENC_ERROR_BITSTREAM_OUT_OF_MEMORY: 2,  // memory error while flushing bits\n  VP8_ENC_ERROR_NULL_PARAMETER: 3,           // a pointer parameter is NULL\n  VP8_ENC_ERROR_INVALID_CONFIGURATION: 4,    // configuration is invalid\n  VP8_ENC_ERROR_BAD_DIMENSION: 5,            // picture has invalid width/height\n  VP8_ENC_ERROR_PARTITION0_OVERFLOW: 6,      // partition is bigger than 512k\n  VP8_ENC_ERROR_PARTITION_OVERFLOW: 7,       // partition is bigger than 16M\n  VP8_ENC_ERROR_BAD_WRITE: 8,                // error while flushing bytes\n  VP8_ENC_ERROR_FILE_TOO_BIG: 9,             // file is bigger than 4G\n  VP8_ENC_ERROR_USER_ABORT: 10,              // abort request by user\n  VP8_ENC_ERROR_LAST: 11                     // list terminator. always last.\n};\nconst imageHints = {\n  DEFAULT: 0,\n  PICTURE: 1, // digital picture, such as a portrait. Indoors shot\n  PHOTO: 2, // outdoor photograph with natural lighting\n  GRAPH: 3 // discrete tone image (graph, map-tile, etc)\n};\nconst imagePresets = {\n  DEFAULT: 0,\n  PICTURE: 1, // digital picture, such as a portrait. Indoors shot\n  PHOTO: 2, // outdoor photograph with natural lighting\n  DRAWING: 3, // hand or line drawing, with high-contrast details\n  ICON: 4, // small-sized, colorful images\n  TEXT: 5 // text-like\n};\n\nclass Image {\n  constructor() { this.data = null; this.loaded = false; this.path = ''; }\n  async initLib() { return Image.initLib(); }\n  clear() { this.data = null; this.path = ''; this.loaded = false; }\n  // Convenience getters/setters\n  get width() { let d = this.data; return !this.loaded ? undefined : d.extended ? d.extended.width : d.vp8l ? d.vp8l.width : d.vp8 ? d.vp8.width : undefined; }\n  get height() { let d = this.data; return !this.loaded ? undefined : d.extended ? d.extended.height : d.vp8l ? d.vp8l.height : d.vp8 ? d.vp8.height : undefined; }\n  get type() { return this.loaded ? this.data.type : undefined; }\n  get hasAnim() { return this.loaded ? this.data.extended ? this.data.extended.hasAnim : false : false; }\n  get hasAlpha() { return this.loaded ? this.data.extended ? this.data.extended.hasAlpha : this.data.vp8 ? this.data.vp8.alpha : this.data.vp8l ? this.data.vp8l.alpha : false : false; }\n  get anim() { return this.hasAnim ? this.data.anim : undefined; }\n  get frames() { return this.anim ? this.anim.frames : undefined; }\n  get iccp() { return this.data.extended ? this.data.extended.hasICCP ? this.data.iccp.raw : undefined : undefined; }\n  set iccp(raw) {\n    if (!this.data.extended) { this._convertToExtended(); }\n    if (raw === undefined) { this.data.extended.hasICCP = false; delete this.data.iccp; }\n    else { this.data.iccp = { raw }; this.data.extended.hasICCP = true; }\n  }\n  get exif() { return this.data.extended ? this.data.extended.hasEXIF ? this.data.exif.raw : undefined : undefined; }\n  set exif(raw) {\n    if (!this.data.extended) { this._convertToExtended(); }\n    if (raw === undefined) { this.data.extended.hasEXIF = false; delete this.data.exif; }\n    else { this.data.exif = { raw }; this.data.extended.hasEXIF = true; }\n  }\n  get xmp() { return this.data.extended ? this.data.extended.hasXMP ? this.data.xmp.raw : undefined : undefined; }\n  set xmp(raw) {\n    if (!this.data.extended) { this._convertToExtended(); }\n    if (raw === undefined) { this.data.extended.hasXMP = false; delete this.data.xmp; }\n    else { this.data.xmp = { raw }; this.data.extended.hasXMP = true; }\n  }\n  // Private member functions\n  _convertToExtended() {\n    if (!this.loaded) { throw new Error('No image loaded'); }\n    this.data.type = constants.TYPE_EXTENDED;\n    this.data.extended = {\n      hasICCP: false,\n      hasAlpha: false,\n      hasEXIF: false,\n      hasXMP: false,\n      width: this.data.vp8 ? this.data.vp8.width : this.data.vp8l ? this.data.vp8l.width : 1,\n      height: this.data.vp8 ? this.data.vp8.height : this.data.vp8l ? this.data.vp8l.height : 1\n    };\n  }\n  async _demuxFrame(d, frame) {\n    let { hasICCP, hasEXIF, hasXMP } = this.data.extended ? this.data.extended : { hasICCP: false, hasEXIF: false, hasXMP: false }, hasAlpha = ((frame.vp8) && (frame.vp8.alpha)), writer = new WebPWriter();\n    if (typeof d === 'string') { writer.writeFile(d); }\n    else { writer.writeBuffer(); }\n    writer.writeFileHeader();\n    if ((hasICCP) || (hasEXIF) || (hasXMP) || (hasAlpha)) {\n      writer.writeChunk_VP8X({\n        hasICCP,\n        hasEXIF,\n        hasXMP,\n        hasAlpha: ((frame.vp8l) && (frame.vp8l.alpha)) || hasAlpha,\n        width: frame.width,\n        height: frame.height\n      });\n    }\n    if (frame.vp8l) { writer.writeChunk_VP8L(frame.vp8l); }\n    else if (frame.vp8) {\n      if (frame.vp8.alpha) { writer.writeChunk_ALPH(frame.alph); }\n      writer.writeChunk_VP8(frame.vp8);\n    } else { throw new Error('Frame has no VP8/VP8L?'); }\n    if ((hasICCP) || (hasEXIF) || (hasXMP) || (hasAlpha)) {\n      if (this.data.extended.hasICCP) { writer.writeChunk_ICCP(this.data.iccp); }\n      if (this.data.extended.hasEXIF) { writer.writeChunk_EXIF(this.data.exif); }\n      if (this.data.extended.hasXMP) { writer.writeChunk_XMP(this.data.xmp); }\n    }\n    return writer.commit();\n  }\n  async _save(writer, { width = undefined, height = undefined, frames = undefined, bgColor = [ 255, 255, 255, 255 ], loops = 0, delay = 100, x = 0, y = 0, blend = true, dispose = false, exif = false, iccp = false, xmp = false } = {}) {\n    let _width = width !== undefined ? width : this.width - 1, _height = height !== undefined ? height : this.height - 1, isAnim = this.hasAnim || frames !== undefined;\n    if ((_width < 0) || (_width > (1 << 24))) { throw new Error('Width out of range'); }\n    else if ((_height < 0) || (_height > (1 << 24))) { throw new Error('Height out of range'); }\n    else if ((_height * _width) > (Math.pow(2, 32) - 1)) { throw new Error(`Width * height too large (${_width}, ${_height})`); }\n    if (isAnim) {\n      if ((loops < 0) || (loops >= (1 << 24))) { throw new Error('Loops out of range'); }\n      else if ((delay < 0) || (delay >= (1 << 24))) { throw new Error('Delay out of range'); }\n      else if ((x < 0) || (x >= (1 << 24))) { throw new Error('X out of range'); }\n      else if ((y < 0) || (y >= (1 << 24))) { throw new Error('Y out of range'); }\n    } else { if ((_width == 0) || (_height == 0)) { throw new Error('Width/height cannot be 0'); } }\n    writer.writeFileHeader();\n    switch (this.type) {\n      case constants.TYPE_LOSSY: writer.writeChunk_VP8(this.data.vp8); break;\n      case constants.TYPE_LOSSLESS: writer.writeChunk_VP8L(this.data.vp8l); break;\n      case constants.TYPE_EXTENDED:\n        {\n          let hasICCP = iccp === true ? !!this.iccp : iccp,\n              hasEXIF = exif === true ? !!this.exif : exif,\n              hasXMP = xmp === true ? !!this.xmp : xmp;\n          writer.writeChunk_VP8X({\n            hasICCP, hasEXIF, hasXMP,\n            hasAlpha: ((this.data.alph) || ((this.data.vp8l) && (this.data.vp8l.alpha))),\n            hasAnim: isAnim,\n            width: _width,\n            height: _height\n          });\n          if (hasICCP) { writer.writeChunk_ICCP(iccp !== true ? iccp : this.data.iccp); }\n          if (isAnim) {\n            let _frames = frames || this.frames;\n            writer.writeChunk_ANIM({ bgColor, loops });\n            for (let i = 0, l = _frames.length; i < l; i++) {\n              let fr = _frames[i],\n                  _delay = fr.delay == undefined ? delay : fr.delay,\n                  _x = fr.x == undefined ? x :fr.x,\n                  _y = fr.y == undefined ? y : fr.y,\n                  _blend = fr.blend == undefined ? blend : fr.blend,\n                  _dispose = fr.dispose == undefined ? dispose : fr.dispose, img;\n              if ((_delay < 0) || (_delay >= (1 << 24))) { throw new Error(`Delay out of range on frame ${i}`); }\n              else if ((_x < 0) || (_x >= (1 << 24))) { throw new Error(`X out of range on frame ${i}`); }\n              else if ((_y < 0) || (_y >= (1 << 24))) { throw new Error(`Y out of range on frame ${i}`); }\n              if (fr.path) { img = new Image(); await img.load(fr.path); img = img.data; }\n              else if (fr.buffer) { img = new Image(); await img.load(fr.buffer); img = img.data; }\n              else if (fr.img) { img = fr.img.data; }\n              else { img = fr; }\n              writer.writeChunk_ANMF({\n                x: _x,\n                y: _y,\n                delay: _delay,\n                blend: _blend,\n                dispose: _dispose,\n                img\n              });\n            }\n            if ((_width == 0) || (_height == 0)) { writer.updateChunk_VP8X_size(_width == 0 ? writer.width : _width, _height == 0 ? writer.height : _height); }\n          } else {\n            if (this.data.vp8) {\n              if (this.data.alph) { writer.writeChunk_ALPH(this.data.alph); }\n              writer.writeChunk_VP8(this.data.vp8);\n            } else if (this.data.vp8l) { writer.writeChunk_VP8L(this.data.vp8l); }\n          }\n          if (hasEXIF) { writer.writeChunk_EXIF(exif !== true ? exif : this.data.exif); }\n          if (hasXMP) { writer.writeChunk_XMP(xmp !== true ? xmp : this.data.xmp); }\n        }\n        break;\n      default: throw new Error('Unknown image type');\n    }\n    return writer.commit();\n  }\n  // Public member functions\n  async load(d) {\n    let reader = new WebPReader();\n    if (typeof d === 'string') { if (!IO.avail) { await IO.err(); } reader.readFile(d); this.path = d; }\n    else { reader.readBuffer(d); }\n    this.data = await reader.read();\n    this.loaded = true;\n  }\n  convertToAnim() {\n    if (!this.data.extended) { this._convertToExtended(); }\n    if (this.hasAnim) { return; }\n    if (this.data.vp8) { delete this.data.vp8; }\n    if (this.data.vp8l) { delete this.data.vp8l; }\n    if (this.data.alph) { delete this.data.alph; }\n    this.data.extended.hasAnim = true;\n    this.data.anim = {\n      bgColor: [ 255, 255, 255, 255],\n      loops: 0,\n      frames: []\n    };\n  }\n  async demux({ path = undefined, buffers = false, frame = -1, prefix = '#FNAME#', start = 0, end = 0 } = {}) {\n    if (!this.hasAnim) { throw new Error(\"This image isn't an animation\"); }\n    let _end = end == 0 ? this.frames.length : end, bufs = [];\n    if (start < 0) { start = 0; }\n    if (_end >= this.frames.length) { _end = this.frames.length - 1; }\n    if (start > _end) { let n = start; start = _end; _end = n; }\n    if (frame != -1) { start = _end = frame; }\n    for (let i = start; i <= _end; i++) {\n      let t = await this._demuxFrame(path ? (`${path}/${prefix}_${i}.webp`).replace(/#FNAME#/g, IO.basename(this.path, '.webp')) : undefined, this.anim.frames[i]);\n      if (buffers) { bufs.push(t); }\n    }\n    if (buffers) { return bufs; }\n  }\n  async replaceFrame(frameIndex, d) {\n    if (!this.hasAnim) { throw new Error(\"WebP isn't animated\"); }\n    if (typeof frameIndex !== 'number') { throw new Error('Frame index expects a number'); }\n    if ((frameIndex < 0) || (frameIndex >= this.frames.length)) { throw new Error(`Frame index out of bounds (0 <= index < ${this.frames.length})`); }\n    let r = new Image(), fr = this.frames[frameIndex];\n    await r.load(d);\n    switch (r.type) {\n      case constants.TYPE_LOSSY:\n      case constants.TYPE_LOSSLESS:\n        break;\n      case constants.TYPE_EXTENDED:\n        if (r.hasAnim) { throw new Error('Merging animations not currently supported'); }\n        break;\n      default: throw new Error('Unknown WebP type');\n    }\n    switch (fr.type) {\n      case constants.TYPE_LOSSY:\n        if (fr.vp8.alpha) { delete fr.alph; }\n        delete fr.vp8;\n        break;\n      case constants.TYPE_LOSSLESS:\n        delete fr.vp8l;\n        break;\n      default: throw new Error('Unknown frame type');\n    }\n    switch (r.type) {\n      case constants.TYPE_LOSSY:\n        fr.vp8 = r.data.vp8;\n        fr.type = constants.TYPE_LOSSY;\n        break;\n      case constants.TYPE_LOSSLESS:\n        fr.vp8l = r.data.vp8l;\n        fr.type = constants.TYPE_LOSSLESS;\n        break;\n      case constants.TYPE_EXTENDED:\n        if (r.data.vp8) {\n          fr.vp8 = r.data.vp8;\n          if (r.data.vp8.alpha) { fr.alph = r.data.alph; }\n          fr.type = constants.TYPE_LOSSY;\n        } else if (r.data.vp8l) { fr.vp8l = r.data.vp8l; fr.type = constants.TYPE_LOSSLESS; }\n        break;\n    }\n    fr.width = r.width;\n    fr.height = r.height;\n  }\n  async save(path = this.path, { width = this.width, height = this.height, frames = this.frames, bgColor = this.hasAnim ? this.anim.bgColor : [ 255, 255, 255, 255 ], loops = this.hasAnim ? this.anim.loops : 0, delay = 100, x = 0, y = 0, blend = true, dispose = false, exif = !!this.exif, iccp = !!this.iccp, xmp = !!this.xmp } = {}) {\n    let writer = new WebPWriter();\n    if (path !== null) { if (!IO.avail) { await IO.err(); } writer.writeFile(path); }\n    else { writer.writeBuffer(); }\n    return this._save(writer, { width, height, frames, bgColor, loops, delay, x, y, blend, dispose, exif, iccp, xmp });\n  }\n  async getImageData() {\n    if (!Image.libwebp) { throw new Error('Must call Image.initLib() before using getImageData'); }\n    if (this.hasAnim) { throw new Error('Calling getImageData on animations is not supported'); }\n    let buf = await this.save(null);\n    return Image.libwebp.decodeImage(buf, this.width, this.height);\n  }\n  async setImageData(buf, { width = 0, height = 0, preset = undefined, quality = undefined, exact = undefined, lossless = undefined, method = undefined, advanced = undefined } = {}) {\n    if (!Image.libwebp) { throw new Error('Must call Image.initLib() before using setImageData'); }\n    if (this.hasAnim) { throw new Error('Calling setImageData on animations is not supported'); }\n    if ((quality !== undefined) && ((quality < 0) || (quality > 100))) { throw new Error('Quality out of range'); }\n    if ((lossless !== undefined) && ((lossless < 0) || (lossless > 9))) { throw new Error('Lossless preset out of range'); }\n    if ((method !== undefined) && ((method < 0) || (method > 6))) { throw new Error('Method out of range'); }\n    let ret = Image.libwebp.encodeImage(buf, width > 0 ? width : this.width, height > 0 ? height : this.height, { preset, quality, exact, lossless, method, advanced }), img = new Image(), keepEx = false, ex;\n    if (ret.res !== encodeResults.SUCCESS) { return ret.res; }\n    await img.load(Buffer.from(ret.buf));\n    switch (this.type) {\n      case constants.TYPE_LOSSY: delete this.data.vp8; break;\n      case constants.TYPE_LOSSLESS: delete this.data.vp8l; break;\n      case constants.TYPE_EXTENDED:\n        ex = this.data.extended;\n        delete this.data.extended;\n        if ((ex.hasICCP) || (ex.hasEXIF) || (ex.hasXMP)) { keepEx = true; }\n        if (this.data.vp8) { delete this.data.vp8; }\n        if (this.data.vp8l) { delete this.data.vp8l; }\n        if (this.data.alph) { delete this.data.alph; }\n        break;\n    }\n    switch (img.type) {\n      case constants.TYPE_LOSSY:\n        if (keepEx) { this.data.type = constants.TYPE_EXTENDED; ex.hasAlpha = false; ex.width = img.width; ex.height = img.height; this.data.extended = ex; }\n        else { this.data.type = constants.TYPE_LOSSY; }\n        this.data.vp8 = img.data.vp8;\n        break;\n      case constants.TYPE_LOSSLESS:\n        if (keepEx) { this.data.type = constants.TYPE_EXTENDED; ex.hasAlpha = img.data.vp8l.alpha; ex.width = img.width; ex.height = img.height; this.data.extended = ex; }\n        else { this.data.type = constants.TYPE_LOSSLESS; }\n        this.data.vp8l = img.data.vp8l;\n        break;\n      case constants.TYPE_EXTENDED:\n        this.data.type = constants.TYPE_EXTENDED;\n        if (keepEx) { ex.hasAlpha = img.data.alph || ((img.data.vp8l) && (img.data.vp8l.alpha)); ex.width = img.width; ex.height = img.height; this.data.extended = ex; }\n        else { this.data.extended = img.data.extended; }\n        if (img.data.vp8) { this.data.vp8 = img.data.vp8; }\n        if (img.data.vp8l) { this.data.vp8l = img.data.vp8l; }\n        if (img.data.alph) { this.data.alph = img.data.alph; }\n        break;\n    }\n    return encodeResults.SUCCESS;\n  }\n  async getFrameData(frameIndex) {\n    if (!Image.libwebp) { throw new Error('Must call Image.initLib() before using getFrameData'); }\n    if (!this.hasAnim) { throw new Error('Calling getFrameData on non-animations is not supported'); }\n    if (typeof frameIndex !== 'number') { throw new Error('Frame index expects a number'); }\n    if ((frameIndex < 0) || (frameIndex >= this.frames.length)) { throw new Error('Frame index out of range'); }\n    let fr = this.frames[frameIndex], buf = await this._demuxFrame(null, fr);\n    return Image.libwebp.decodeImage(buf, fr.width, fr.height);\n  }\n  async setFrameData(frameIndex, buf, { width = 0, height = 0, preset = undefined, quality = undefined, exact = undefined, lossless = undefined, method = undefined, advanced = undefined } = {}) {\n    if (!Image.libwebp) { throw new Error('Must call Image.initLib() before using setFrameData'); }\n    if (!this.hasAnim) { throw new Error('Calling setFrameData on non-animations is not supported'); }\n    if (typeof frameIndex !== 'number') { throw new Error('Frame index expects a number'); }\n    if ((frameIndex < 0) || (frameIndex >= this.frames.length)) { throw new Error('Frame index out of range'); }\n    if ((quality !== undefined) && ((quality < 0) || (quality > 100))) { throw new Error('Quality out of range'); }\n    if ((lossless !== undefined) && ((lossless < 0) || (lossless > 9))) { throw new Error('Lossless preset out of range'); }\n    if ((method !== undefined) && ((method < 0) || (method > 6))) { throw new Error('Method out of range'); }\n    let fr = this.frames[frameIndex], ret = Image.libwebp.encodeImage(buf, width > 0 ? width : fr.width, height > 0 ? height : fr.height, { preset, quality, exact, lossless, method, advanced }), img = new Image();\n    if (ret.res !== encodeResults.SUCCESS) { return ret.res; }\n    await img.load(Buffer.from(ret.buf));\n    switch (fr.type) {\n      case constants.TYPE_LOSSY: delete fr.vp8; if (fr.alph) { delete fr.alph; } break;\n      case constants.TYPE_LOSSLESS: delete fr.vp8l; break;\n    }\n    fr.width = img.width;\n    fr.height = img.height;\n    switch (img.type) {\n      case constants.TYPE_LOSSY: fr.type = img.type; fr.vp8 = img.data.vp8; break;\n      case constants.TYPE_LOSSLESS: fr.type = img.type; fr.vp8l = img.data.vp8l; break;\n      case constants.TYPE_EXTENDED:\n        if (img.data.vp8) {\n          fr.type = constants.TYPE_LOSSY;\n          fr.vp8 = img.data.vp8;\n          if (img.data.vp8.alpha) { fr.alph = img.data.alph; }\n        } else if (img.data.vp8l) {\n          fr.type = constants.TYPE_LOSSLESS;\n          fr.vp8l = img.data.vp8l;\n        }\n        break;\n    }\n    return encodeResults.SUCCESS;\n  }\n  // Public static functions\n  static async initLib() {\n    if (!Image.libwebp) {\n      const libWebP = require('./libwebp.js');\n      Image.libwebp = new libWebP();\n      await Image.libwebp.init();\n    }\n  }\n  static async save(d, opts) {\n    if ((opts.frames) && ((opts.width === undefined) || (opts.height === undefined))) { throw new Error('Must provide both width and height when passing frames'); }\n    return (await Image.getEmptyImage(!!opts.frames)).save(d, opts);\n  }\n  static async getEmptyImage(ext) {\n    let img = new Image();\n    await img.load(emptyImageBuffer);\n    if (ext) { img.exif = undefined; }\n    return img;\n  }\n  static async generateFrame({ path = undefined, buffer = undefined, img = undefined, x = undefined, y = undefined, delay = undefined, blend = undefined, dispose = undefined } = {}) {\n    let _img = img;\n    if (((!path) && (!buffer) && (!img)) ||\n        ((path) && (buffer) && (img))) { throw new Error('Must provide either `path`, `buffer`, or `img`'); }\n    if (!img) {\n      _img = new Image();\n      if (path) { await _img.load(path); }\n      else { await _img.load(buffer); }\n    }\n    if (_img.hasAnim) { throw new Error('Merging animations is not currently supported'); }\n    return {\n      img: _img,\n      x,\n      y,\n      delay,\n      blend,\n      dispose\n    };\n  }\n  static from(webp) {\n    let img = new Image();\n    img.data = webp.data;\n    img.loaded = webp.loaded;\n    img.path = webp.path;\n    return img;\n  }\n}\nmodule.exports = {\n  TYPE_LOSSY: constants.TYPE_LOSSY,\n  TYPE_LOSSLESS: constants.TYPE_LOSSLESS,\n  TYPE_EXTENDED: constants.TYPE_EXTENDED,\n  encodeResults,\n  hints: imageHints,\n  presets: imagePresets,\n  Image\n};\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/node-webpmux/webp.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/node-webpmux/webp.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}}],"sources":{"../node_modules/node-webpmux/webp.js":"/*\n    node-webpmux - NodeJS module for interacting with WebP images\n    Copyright (C) 2023  ApeironTsuka\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n*/\n\n\n// For more information on the WebP format, see https://developers.google.com/speed/webp/docs/riff_container\nconst { WebPReader, WebPWriter } = require('./parser.js');\nconst IO = require('./io.js');\nconst emptyImageBuffer = Buffer.from([\n  0x52, 0x49, 0x46, 0x46,   0x24, 0x00, 0x00, 0x00,   0x57, 0x45, 0x42, 0x50,   0x56, 0x50, 0x38, 0x20,\n  0x18, 0x00, 0x00, 0x00,   0x30, 0x01, 0x00, 0x9d,   0x01, 0x2a, 0x01, 0x00,   0x01, 0x00, 0x02, 0x00,\n  0x34, 0x25, 0xa4, 0x00,   0x03, 0x70, 0x00, 0xfe,   0xfb, 0xfd, 0x50, 0x00\n]);\nconst constants = {\n  TYPE_LOSSY: 0,\n  TYPE_LOSSLESS: 1,\n  TYPE_EXTENDED: 2\n};\nconst encodeResults = {\n  // These are errors from binding.cpp\n  LIB_NOT_READY: -1,                         // <interface>.initEnc() was not called. This happens internally during <interface>.encodeImage() and thus should never happen.\n  LIB_INVALID_CONFIG: -2,                    // invalid options passed in via set[Image/Frame]Data. This should never happen.\n  SUCCESS: 0,\n  // These errors are from native code and can be found in upstream libwebp/src/encode.h, WebPEncodingError enum\n  VP8_ENC_ERROR_OUT_OF_MEMORY: 1,            // memory error allocating objects\n  VP8_ENC_ERROR_BITSTREAM_OUT_OF_MEMORY: 2,  // memory error while flushing bits\n  VP8_ENC_ERROR_NULL_PARAMETER: 3,           // a pointer parameter is NULL\n  VP8_ENC_ERROR_INVALID_CONFIGURATION: 4,    // configuration is invalid\n  VP8_ENC_ERROR_BAD_DIMENSION: 5,            // picture has invalid width/height\n  VP8_ENC_ERROR_PARTITION0_OVERFLOW: 6,      // partition is bigger than 512k\n  VP8_ENC_ERROR_PARTITION_OVERFLOW: 7,       // partition is bigger than 16M\n  VP8_ENC_ERROR_BAD_WRITE: 8,                // error while flushing bytes\n  VP8_ENC_ERROR_FILE_TOO_BIG: 9,             // file is bigger than 4G\n  VP8_ENC_ERROR_USER_ABORT: 10,              // abort request by user\n  VP8_ENC_ERROR_LAST: 11                     // list terminator. always last.\n};\nconst imageHints = {\n  DEFAULT: 0,\n  PICTURE: 1, // digital picture, such as a portrait. Indoors shot\n  PHOTO: 2, // outdoor photograph with natural lighting\n  GRAPH: 3 // discrete tone image (graph, map-tile, etc)\n};\nconst imagePresets = {\n  DEFAULT: 0,\n  PICTURE: 1, // digital picture, such as a portrait. Indoors shot\n  PHOTO: 2, // outdoor photograph with natural lighting\n  DRAWING: 3, // hand or line drawing, with high-contrast details\n  ICON: 4, // small-sized, colorful images\n  TEXT: 5 // text-like\n};\n\nclass Image {\n  constructor() { this.data = null; this.loaded = false; this.path = ''; }\n  async initLib() { return Image.initLib(); }\n  clear() { this.data = null; this.path = ''; this.loaded = false; }\n  // Convenience getters/setters\n  get width() { let d = this.data; return !this.loaded ? undefined : d.extended ? d.extended.width : d.vp8l ? d.vp8l.width : d.vp8 ? d.vp8.width : undefined; }\n  get height() { let d = this.data; return !this.loaded ? undefined : d.extended ? d.extended.height : d.vp8l ? d.vp8l.height : d.vp8 ? d.vp8.height : undefined; }\n  get type() { return this.loaded ? this.data.type : undefined; }\n  get hasAnim() { return this.loaded ? this.data.extended ? this.data.extended.hasAnim : false : false; }\n  get hasAlpha() { return this.loaded ? this.data.extended ? this.data.extended.hasAlpha : this.data.vp8 ? this.data.vp8.alpha : this.data.vp8l ? this.data.vp8l.alpha : false : false; }\n  get anim() { return this.hasAnim ? this.data.anim : undefined; }\n  get frames() { return this.anim ? this.anim.frames : undefined; }\n  get iccp() { return this.data.extended ? this.data.extended.hasICCP ? this.data.iccp.raw : undefined : undefined; }\n  set iccp(raw) {\n    if (!this.data.extended) { this._convertToExtended(); }\n    if (raw === undefined) { this.data.extended.hasICCP = false; delete this.data.iccp; }\n    else { this.data.iccp = { raw }; this.data.extended.hasICCP = true; }\n  }\n  get exif() { return this.data.extended ? this.data.extended.hasEXIF ? this.data.exif.raw : undefined : undefined; }\n  set exif(raw) {\n    if (!this.data.extended) { this._convertToExtended(); }\n    if (raw === undefined) { this.data.extended.hasEXIF = false; delete this.data.exif; }\n    else { this.data.exif = { raw }; this.data.extended.hasEXIF = true; }\n  }\n  get xmp() { return this.data.extended ? this.data.extended.hasXMP ? this.data.xmp.raw : undefined : undefined; }\n  set xmp(raw) {\n    if (!this.data.extended) { this._convertToExtended(); }\n    if (raw === undefined) { this.data.extended.hasXMP = false; delete this.data.xmp; }\n    else { this.data.xmp = { raw }; this.data.extended.hasXMP = true; }\n  }\n  // Private member functions\n  _convertToExtended() {\n    if (!this.loaded) { throw new Error('No image loaded'); }\n    this.data.type = constants.TYPE_EXTENDED;\n    this.data.extended = {\n      hasICCP: false,\n      hasAlpha: false,\n      hasEXIF: false,\n      hasXMP: false,\n      width: this.data.vp8 ? this.data.vp8.width : this.data.vp8l ? this.data.vp8l.width : 1,\n      height: this.data.vp8 ? this.data.vp8.height : this.data.vp8l ? this.data.vp8l.height : 1\n    };\n  }\n  async _demuxFrame(d, frame) {\n    let { hasICCP, hasEXIF, hasXMP } = this.data.extended ? this.data.extended : { hasICCP: false, hasEXIF: false, hasXMP: false }, hasAlpha = ((frame.vp8) && (frame.vp8.alpha)), writer = new WebPWriter();\n    if (typeof d === 'string') { writer.writeFile(d); }\n    else { writer.writeBuffer(); }\n    writer.writeFileHeader();\n    if ((hasICCP) || (hasEXIF) || (hasXMP) || (hasAlpha)) {\n      writer.writeChunk_VP8X({\n        hasICCP,\n        hasEXIF,\n        hasXMP,\n        hasAlpha: ((frame.vp8l) && (frame.vp8l.alpha)) || hasAlpha,\n        width: frame.width,\n        height: frame.height\n      });\n    }\n    if (frame.vp8l) { writer.writeChunk_VP8L(frame.vp8l); }\n    else if (frame.vp8) {\n      if (frame.vp8.alpha) { writer.writeChunk_ALPH(frame.alph); }\n      writer.writeChunk_VP8(frame.vp8);\n    } else { throw new Error('Frame has no VP8/VP8L?'); }\n    if ((hasICCP) || (hasEXIF) || (hasXMP) || (hasAlpha)) {\n      if (this.data.extended.hasICCP) { writer.writeChunk_ICCP(this.data.iccp); }\n      if (this.data.extended.hasEXIF) { writer.writeChunk_EXIF(this.data.exif); }\n      if (this.data.extended.hasXMP) { writer.writeChunk_XMP(this.data.xmp); }\n    }\n    return writer.commit();\n  }\n  async _save(writer, { width = undefined, height = undefined, frames = undefined, bgColor = [ 255, 255, 255, 255 ], loops = 0, delay = 100, x = 0, y = 0, blend = true, dispose = false, exif = false, iccp = false, xmp = false } = {}) {\n    let _width = width !== undefined ? width : this.width - 1, _height = height !== undefined ? height : this.height - 1, isAnim = this.hasAnim || frames !== undefined;\n    if ((_width < 0) || (_width > (1 << 24))) { throw new Error('Width out of range'); }\n    else if ((_height < 0) || (_height > (1 << 24))) { throw new Error('Height out of range'); }\n    else if ((_height * _width) > (Math.pow(2, 32) - 1)) { throw new Error(`Width * height too large (${_width}, ${_height})`); }\n    if (isAnim) {\n      if ((loops < 0) || (loops >= (1 << 24))) { throw new Error('Loops out of range'); }\n      else if ((delay < 0) || (delay >= (1 << 24))) { throw new Error('Delay out of range'); }\n      else if ((x < 0) || (x >= (1 << 24))) { throw new Error('X out of range'); }\n      else if ((y < 0) || (y >= (1 << 24))) { throw new Error('Y out of range'); }\n    } else { if ((_width == 0) || (_height == 0)) { throw new Error('Width/height cannot be 0'); } }\n    writer.writeFileHeader();\n    switch (this.type) {\n      case constants.TYPE_LOSSY: writer.writeChunk_VP8(this.data.vp8); break;\n      case constants.TYPE_LOSSLESS: writer.writeChunk_VP8L(this.data.vp8l); break;\n      case constants.TYPE_EXTENDED:\n        {\n          let hasICCP = iccp === true ? !!this.iccp : iccp,\n              hasEXIF = exif === true ? !!this.exif : exif,\n              hasXMP = xmp === true ? !!this.xmp : xmp;\n          writer.writeChunk_VP8X({\n            hasICCP, hasEXIF, hasXMP,\n            hasAlpha: ((this.data.alph) || ((this.data.vp8l) && (this.data.vp8l.alpha))),\n            hasAnim: isAnim,\n            width: _width,\n            height: _height\n          });\n          if (hasICCP) { writer.writeChunk_ICCP(iccp !== true ? iccp : this.data.iccp); }\n          if (isAnim) {\n            let _frames = frames || this.frames;\n            writer.writeChunk_ANIM({ bgColor, loops });\n            for (let i = 0, l = _frames.length; i < l; i++) {\n              let fr = _frames[i],\n                  _delay = fr.delay == undefined ? delay : fr.delay,\n                  _x = fr.x == undefined ? x :fr.x,\n                  _y = fr.y == undefined ? y : fr.y,\n                  _blend = fr.blend == undefined ? blend : fr.blend,\n                  _dispose = fr.dispose == undefined ? dispose : fr.dispose, img;\n              if ((_delay < 0) || (_delay >= (1 << 24))) { throw new Error(`Delay out of range on frame ${i}`); }\n              else if ((_x < 0) || (_x >= (1 << 24))) { throw new Error(`X out of range on frame ${i}`); }\n              else if ((_y < 0) || (_y >= (1 << 24))) { throw new Error(`Y out of range on frame ${i}`); }\n              if (fr.path) { img = new Image(); await img.load(fr.path); img = img.data; }\n              else if (fr.buffer) { img = new Image(); await img.load(fr.buffer); img = img.data; }\n              else if (fr.img) { img = fr.img.data; }\n              else { img = fr; }\n              writer.writeChunk_ANMF({\n                x: _x,\n                y: _y,\n                delay: _delay,\n                blend: _blend,\n                dispose: _dispose,\n                img\n              });\n            }\n            if ((_width == 0) || (_height == 0)) { writer.updateChunk_VP8X_size(_width == 0 ? writer.width : _width, _height == 0 ? writer.height : _height); }\n          } else {\n            if (this.data.vp8) {\n              if (this.data.alph) { writer.writeChunk_ALPH(this.data.alph); }\n              writer.writeChunk_VP8(this.data.vp8);\n            } else if (this.data.vp8l) { writer.writeChunk_VP8L(this.data.vp8l); }\n          }\n          if (hasEXIF) { writer.writeChunk_EXIF(exif !== true ? exif : this.data.exif); }\n          if (hasXMP) { writer.writeChunk_XMP(xmp !== true ? xmp : this.data.xmp); }\n        }\n        break;\n      default: throw new Error('Unknown image type');\n    }\n    return writer.commit();\n  }\n  // Public member functions\n  async load(d) {\n    let reader = new WebPReader();\n    if (typeof d === 'string') { if (!IO.avail) { await IO.err(); } reader.readFile(d); this.path = d; }\n    else { reader.readBuffer(d); }\n    this.data = await reader.read();\n    this.loaded = true;\n  }\n  convertToAnim() {\n    if (!this.data.extended) { this._convertToExtended(); }\n    if (this.hasAnim) { return; }\n    if (this.data.vp8) { delete this.data.vp8; }\n    if (this.data.vp8l) { delete this.data.vp8l; }\n    if (this.data.alph) { delete this.data.alph; }\n    this.data.extended.hasAnim = true;\n    this.data.anim = {\n      bgColor: [ 255, 255, 255, 255],\n      loops: 0,\n      frames: []\n    };\n  }\n  async demux({ path = undefined, buffers = false, frame = -1, prefix = '#FNAME#', start = 0, end = 0 } = {}) {\n    if (!this.hasAnim) { throw new Error(\"This image isn't an animation\"); }\n    let _end = end == 0 ? this.frames.length : end, bufs = [];\n    if (start < 0) { start = 0; }\n    if (_end >= this.frames.length) { _end = this.frames.length - 1; }\n    if (start > _end) { let n = start; start = _end; _end = n; }\n    if (frame != -1) { start = _end = frame; }\n    for (let i = start; i <= _end; i++) {\n      let t = await this._demuxFrame(path ? (`${path}/${prefix}_${i}.webp`).replace(/#FNAME#/g, IO.basename(this.path, '.webp')) : undefined, this.anim.frames[i]);\n      if (buffers) { bufs.push(t); }\n    }\n    if (buffers) { return bufs; }\n  }\n  async replaceFrame(frameIndex, d) {\n    if (!this.hasAnim) { throw new Error(\"WebP isn't animated\"); }\n    if (typeof frameIndex !== 'number') { throw new Error('Frame index expects a number'); }\n    if ((frameIndex < 0) || (frameIndex >= this.frames.length)) { throw new Error(`Frame index out of bounds (0 <= index < ${this.frames.length})`); }\n    let r = new Image(), fr = this.frames[frameIndex];\n    await r.load(d);\n    switch (r.type) {\n      case constants.TYPE_LOSSY:\n      case constants.TYPE_LOSSLESS:\n        break;\n      case constants.TYPE_EXTENDED:\n        if (r.hasAnim) { throw new Error('Merging animations not currently supported'); }\n        break;\n      default: throw new Error('Unknown WebP type');\n    }\n    switch (fr.type) {\n      case constants.TYPE_LOSSY:\n        if (fr.vp8.alpha) { delete fr.alph; }\n        delete fr.vp8;\n        break;\n      case constants.TYPE_LOSSLESS:\n        delete fr.vp8l;\n        break;\n      default: throw new Error('Unknown frame type');\n    }\n    switch (r.type) {\n      case constants.TYPE_LOSSY:\n        fr.vp8 = r.data.vp8;\n        fr.type = constants.TYPE_LOSSY;\n        break;\n      case constants.TYPE_LOSSLESS:\n        fr.vp8l = r.data.vp8l;\n        fr.type = constants.TYPE_LOSSLESS;\n        break;\n      case constants.TYPE_EXTENDED:\n        if (r.data.vp8) {\n          fr.vp8 = r.data.vp8;\n          if (r.data.vp8.alpha) { fr.alph = r.data.alph; }\n          fr.type = constants.TYPE_LOSSY;\n        } else if (r.data.vp8l) { fr.vp8l = r.data.vp8l; fr.type = constants.TYPE_LOSSLESS; }\n        break;\n    }\n    fr.width = r.width;\n    fr.height = r.height;\n  }\n  async save(path = this.path, { width = this.width, height = this.height, frames = this.frames, bgColor = this.hasAnim ? this.anim.bgColor : [ 255, 255, 255, 255 ], loops = this.hasAnim ? this.anim.loops : 0, delay = 100, x = 0, y = 0, blend = true, dispose = false, exif = !!this.exif, iccp = !!this.iccp, xmp = !!this.xmp } = {}) {\n    let writer = new WebPWriter();\n    if (path !== null) { if (!IO.avail) { await IO.err(); } writer.writeFile(path); }\n    else { writer.writeBuffer(); }\n    return this._save(writer, { width, height, frames, bgColor, loops, delay, x, y, blend, dispose, exif, iccp, xmp });\n  }\n  async getImageData() {\n    if (!Image.libwebp) { throw new Error('Must call Image.initLib() before using getImageData'); }\n    if (this.hasAnim) { throw new Error('Calling getImageData on animations is not supported'); }\n    let buf = await this.save(null);\n    return Image.libwebp.decodeImage(buf, this.width, this.height);\n  }\n  async setImageData(buf, { width = 0, height = 0, preset = undefined, quality = undefined, exact = undefined, lossless = undefined, method = undefined, advanced = undefined } = {}) {\n    if (!Image.libwebp) { throw new Error('Must call Image.initLib() before using setImageData'); }\n    if (this.hasAnim) { throw new Error('Calling setImageData on animations is not supported'); }\n    if ((quality !== undefined) && ((quality < 0) || (quality > 100))) { throw new Error('Quality out of range'); }\n    if ((lossless !== undefined) && ((lossless < 0) || (lossless > 9))) { throw new Error('Lossless preset out of range'); }\n    if ((method !== undefined) && ((method < 0) || (method > 6))) { throw new Error('Method out of range'); }\n    let ret = Image.libwebp.encodeImage(buf, width > 0 ? width : this.width, height > 0 ? height : this.height, { preset, quality, exact, lossless, method, advanced }), img = new Image(), keepEx = false, ex;\n    if (ret.res !== encodeResults.SUCCESS) { return ret.res; }\n    await img.load(Buffer.from(ret.buf));\n    switch (this.type) {\n      case constants.TYPE_LOSSY: delete this.data.vp8; break;\n      case constants.TYPE_LOSSLESS: delete this.data.vp8l; break;\n      case constants.TYPE_EXTENDED:\n        ex = this.data.extended;\n        delete this.data.extended;\n        if ((ex.hasICCP) || (ex.hasEXIF) || (ex.hasXMP)) { keepEx = true; }\n        if (this.data.vp8) { delete this.data.vp8; }\n        if (this.data.vp8l) { delete this.data.vp8l; }\n        if (this.data.alph) { delete this.data.alph; }\n        break;\n    }\n    switch (img.type) {\n      case constants.TYPE_LOSSY:\n        if (keepEx) { this.data.type = constants.TYPE_EXTENDED; ex.hasAlpha = false; ex.width = img.width; ex.height = img.height; this.data.extended = ex; }\n        else { this.data.type = constants.TYPE_LOSSY; }\n        this.data.vp8 = img.data.vp8;\n        break;\n      case constants.TYPE_LOSSLESS:\n        if (keepEx) { this.data.type = constants.TYPE_EXTENDED; ex.hasAlpha = img.data.vp8l.alpha; ex.width = img.width; ex.height = img.height; this.data.extended = ex; }\n        else { this.data.type = constants.TYPE_LOSSLESS; }\n        this.data.vp8l = img.data.vp8l;\n        break;\n      case constants.TYPE_EXTENDED:\n        this.data.type = constants.TYPE_EXTENDED;\n        if (keepEx) { ex.hasAlpha = img.data.alph || ((img.data.vp8l) && (img.data.vp8l.alpha)); ex.width = img.width; ex.height = img.height; this.data.extended = ex; }\n        else { this.data.extended = img.data.extended; }\n        if (img.data.vp8) { this.data.vp8 = img.data.vp8; }\n        if (img.data.vp8l) { this.data.vp8l = img.data.vp8l; }\n        if (img.data.alph) { this.data.alph = img.data.alph; }\n        break;\n    }\n    return encodeResults.SUCCESS;\n  }\n  async getFrameData(frameIndex) {\n    if (!Image.libwebp) { throw new Error('Must call Image.initLib() before using getFrameData'); }\n    if (!this.hasAnim) { throw new Error('Calling getFrameData on non-animations is not supported'); }\n    if (typeof frameIndex !== 'number') { throw new Error('Frame index expects a number'); }\n    if ((frameIndex < 0) || (frameIndex >= this.frames.length)) { throw new Error('Frame index out of range'); }\n    let fr = this.frames[frameIndex], buf = await this._demuxFrame(null, fr);\n    return Image.libwebp.decodeImage(buf, fr.width, fr.height);\n  }\n  async setFrameData(frameIndex, buf, { width = 0, height = 0, preset = undefined, quality = undefined, exact = undefined, lossless = undefined, method = undefined, advanced = undefined } = {}) {\n    if (!Image.libwebp) { throw new Error('Must call Image.initLib() before using setFrameData'); }\n    if (!this.hasAnim) { throw new Error('Calling setFrameData on non-animations is not supported'); }\n    if (typeof frameIndex !== 'number') { throw new Error('Frame index expects a number'); }\n    if ((frameIndex < 0) || (frameIndex >= this.frames.length)) { throw new Error('Frame index out of range'); }\n    if ((quality !== undefined) && ((quality < 0) || (quality > 100))) { throw new Error('Quality out of range'); }\n    if ((lossless !== undefined) && ((lossless < 0) || (lossless > 9))) { throw new Error('Lossless preset out of range'); }\n    if ((method !== undefined) && ((method < 0) || (method > 6))) { throw new Error('Method out of range'); }\n    let fr = this.frames[frameIndex], ret = Image.libwebp.encodeImage(buf, width > 0 ? width : fr.width, height > 0 ? height : fr.height, { preset, quality, exact, lossless, method, advanced }), img = new Image();\n    if (ret.res !== encodeResults.SUCCESS) { return ret.res; }\n    await img.load(Buffer.from(ret.buf));\n    switch (fr.type) {\n      case constants.TYPE_LOSSY: delete fr.vp8; if (fr.alph) { delete fr.alph; } break;\n      case constants.TYPE_LOSSLESS: delete fr.vp8l; break;\n    }\n    fr.width = img.width;\n    fr.height = img.height;\n    switch (img.type) {\n      case constants.TYPE_LOSSY: fr.type = img.type; fr.vp8 = img.data.vp8; break;\n      case constants.TYPE_LOSSLESS: fr.type = img.type; fr.vp8l = img.data.vp8l; break;\n      case constants.TYPE_EXTENDED:\n        if (img.data.vp8) {\n          fr.type = constants.TYPE_LOSSY;\n          fr.vp8 = img.data.vp8;\n          if (img.data.vp8.alpha) { fr.alph = img.data.alph; }\n        } else if (img.data.vp8l) {\n          fr.type = constants.TYPE_LOSSLESS;\n          fr.vp8l = img.data.vp8l;\n        }\n        break;\n    }\n    return encodeResults.SUCCESS;\n  }\n  // Public static functions\n  static async initLib() {\n    if (!Image.libwebp) {\n      const libWebP = require('./libwebp.js');\n      Image.libwebp = new libWebP();\n      await Image.libwebp.init();\n    }\n  }\n  static async save(d, opts) {\n    if ((opts.frames) && ((opts.width === undefined) || (opts.height === undefined))) { throw new Error('Must provide both width and height when passing frames'); }\n    return (await Image.getEmptyImage(!!opts.frames)).save(d, opts);\n  }\n  static async getEmptyImage(ext) {\n    let img = new Image();\n    await img.load(emptyImageBuffer);\n    if (ext) { img.exif = undefined; }\n    return img;\n  }\n  static async generateFrame({ path = undefined, buffer = undefined, img = undefined, x = undefined, y = undefined, delay = undefined, blend = undefined, dispose = undefined } = {}) {\n    let _img = img;\n    if (((!path) && (!buffer) && (!img)) ||\n        ((path) && (buffer) && (img))) { throw new Error('Must provide either `path`, `buffer`, or `img`'); }\n    if (!img) {\n      _img = new Image();\n      if (path) { await _img.load(path); }\n      else { await _img.load(buffer); }\n    }\n    if (_img.hasAnim) { throw new Error('Merging animations is not currently supported'); }\n    return {\n      img: _img,\n      x,\n      y,\n      delay,\n      blend,\n      dispose\n    };\n  }\n  static from(webp) {\n    let img = new Image();\n    img.data = webp.data;\n    img.loaded = webp.loaded;\n    img.path = webp.path;\n    return img;\n  }\n}\nmodule.exports = {\n  TYPE_LOSSY: constants.TYPE_LOSSY,\n  TYPE_LOSSLESS: constants.TYPE_LOSSLESS,\n  TYPE_EXTENDED: constants.TYPE_EXTENDED,\n  encodeResults,\n  hints: imageHints,\n  presets: imagePresets,\n  Image\n};\n\n"},"lineCount":433}},"error":null,"hash":"d4348beb89a4dac454e2432f12122e0a","cacheData":{"env":{}}}